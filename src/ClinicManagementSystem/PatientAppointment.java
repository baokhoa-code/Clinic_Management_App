/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ClinicManagementSystem;

import Functions.FunctionAppointment;
import Functions.FunctionDoctor;
import Functions.FunctionFreeSchedule;
import Functions.FunctionPatient;
import Model.Appointment;
import Model.Doctor;
import Model.FreeSchedule;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author khoa1
 */
public class PatientAppointment extends javax.swing.JFrame {
    
    private int patient_id;
    
    /**
     * Creates new form PatientAppointment
     */
    public PatientAppointment() {
        initComponents();
    }
    
    public PatientAppointment(int id) {
        initComponents();
        patient_id = id;
        btnAdd.setEnabled(true);
        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        btnBill = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnInfor = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        btnExit = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        jdcDate = new com.toedter.calendar.JDateChooser();
        jLabel29 = new javax.swing.JLabel();
        cbxStart = new javax.swing.JComboBox<>();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtBackDisea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtSymptom = new javax.swing.JTextArea();
        btnSearch = new javax.swing.JButton();
        cbxEnd = new javax.swing.JComboBox<>();
        jLabel32 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tbShowList = new javax.swing.JTable();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtAppointID = new javax.swing.JTextField();
        jPanel8 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        txtDiagnose = new javax.swing.JTextArea();
        jPanel5 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tbDoctor = new javax.swing.JTable();
        jLabel24 = new javax.swing.JLabel();
        txtDname = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtDID = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(51, 204, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(178, 508));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 0));
        jLabel2.setText("PATIENT");

        btnBill.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnBill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/View Detail Bills.png"))); // NOI18N
        btnBill.setText("Prescrible");
        btnBill.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBillActionPerformed(evt);
            }
        });

        btnLogout.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLogout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Logout.png"))); // NOI18N
        btnLogout.setText("Log out");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("CLNIC MANAGEMENT");

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/clinic_ICON1.png"))); // NOI18N
        jLabel4.setText("jLabel4");
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });

        btnInfor.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnInfor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/information_icon.png"))); // NOI18N
        btnInfor.setText("Information");
        btnInfor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInforActionPerformed(evt);
            }
        });

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0), 2));

        jLabel1.setBackground(new java.awt.Color(204, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/appointments_icon.png"))); // NOI18N
        jLabel1.setText("Appointment");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(58, 58, 58)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnBill, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnInfor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(61, 61, 61))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(13, 13, 13)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 154, Short.MAX_VALUE)
                    .addGap(14, 14, 14)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addGap(34, 34, 34)
                .addComponent(btnInfor, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101)
                .addComponent(btnBill, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(226, 226, 226)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(367, Short.MAX_VALUE)))
        );

        jPanel3.setBackground(new java.awt.Color(204, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 51), 2));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(255, 0, 0));
        jLabel15.setText("Appointment");

        btnExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/exit.png"))); // NOI18N
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 20)); // NOI18N
        jLabel18.setText("Appointment Information");

        jLabel28.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel28.setText("Date");

        jdcDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jdcDateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jdcDateMouseEntered(evt);
            }
        });
        jdcDate.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                jdcDateInputMethodTextChanged(evt);
            }
        });
        jdcDate.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jdcDateKeyPressed(evt);
            }
        });

        jLabel29.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel29.setText("Start");

        cbxStart.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "07:00", "08:00", "09:00", "10:00", "11:00", "13:00", "14:00", "15:00", "16:00" }));
        cbxStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxStartActionPerformed(evt);
            }
        });

        jLabel30.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel30.setText("Symptom");

        jLabel31.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel31.setText("Background diseases");

        txtBackDisea.setColumns(20);
        txtBackDisea.setRows(5);
        jScrollPane1.setViewportView(txtBackDisea);

        txtSymptom.setColumns(20);
        txtSymptom.setRows(5);
        jScrollPane2.setViewportView(txtSymptom);

        btnSearch.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnSearch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/search-engine.png"))); // NOI18N
        btnSearch.setText("Search Doctor");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        cbxEnd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "08:00", "09:00", "10:00", "11:00", "12:00", "14:00", "15:00", "16:00", "17:00" }));
        cbxEnd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxEndActionPerformed(evt);
            }
        });

        jLabel32.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel32.setText("End");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel28)
                        .addGap(18, 18, 18)
                        .addComponent(jdcDate, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel32)
                        .addGap(26, 26, 26)
                        .addComponent(cbxEnd, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel29)
                        .addGap(18, 18, 18)
                        .addComponent(cbxStart, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel30)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel31)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel18)
                .addGap(189, 189, 189))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addComponent(jLabel18)
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jdcDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel28))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel29)
                            .addComponent(cbxStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel32)
                            .addComponent(cbxEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(btnSearch)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tbShowList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "DID", "Date", "Diagnosed", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tbShowList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbShowListMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tbShowList);
        if (tbShowList.getColumnModel().getColumnCount() > 0) {
            tbShowList.getColumnModel().getColumn(0).setPreferredWidth(20);
            tbShowList.getColumnModel().getColumn(1).setPreferredWidth(20);
        }

        btnAdd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnAdd.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/New Products.png"))); // NOI18N
        btnAdd.setText("Register");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnUpdate.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/update.png"))); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnClear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Clear.png"))); // NOI18N
        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 13)); // NOI18N
        jLabel11.setText("Appoinment ID");

        txtAppointID.setEditable(false);
        txtAppointID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAppointIDActionPerformed(evt);
            }
        });
        txtAppointID.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtAppointIDKeyReleased(evt);
            }
        });

        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel20.setText("Diagnose");
        jPanel8.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        txtDiagnose.setEditable(false);
        txtDiagnose.setColumns(20);
        txtDiagnose.setRows(5);
        jScrollPane4.setViewportView(txtDiagnose);

        jPanel8.add(jScrollPane4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, 270, 200));

        jPanel5.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 22)); // NOI18N
        jLabel17.setText("Doctor");
        jPanel5.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 20, -1, -1));

        tbDoctor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name"
            }
        ));
        tbDoctor.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        tbDoctor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbDoctorMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(tbDoctor);
        if (tbDoctor.getColumnModel().getColumnCount() > 0) {
            tbDoctor.getColumnModel().getColumn(0).setMinWidth(30);
            tbDoctor.getColumnModel().getColumn(0).setPreferredWidth(30);
            tbDoctor.getColumnModel().getColumn(0).setMaxWidth(30);
        }

        jPanel5.add(jScrollPane5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 270, 200));

        jLabel24.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel24.setText("ID");
        jPanel5.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 50, -1, -1));

        txtDname.setEditable(false);
        txtDname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDnameActionPerformed(evt);
            }
        });
        jPanel5.add(txtDname, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 80, 140, -1));

        jLabel25.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel25.setText("Name");
        jPanel5.add(jLabel25, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 80, -1, -1));

        txtDID.setEditable(false);
        jPanel5.add(txtDID, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 50, 70, -1));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(122, 122, 122)
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(40, 40, 40)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(50, 50, 50)
                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(61, 61, 61)
                        .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtAppointID, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(352, 352, 352)
                                .addComponent(jLabel15)))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 486, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnExit, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtAppointID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLabel15)
                        .addComponent(btnExit)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 33, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnDelete)
                    .addComponent(btnClear))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int x = JOptionPane.showConfirmDialog(null, "Do you want to close application?", "Select", JOptionPane.YES_NO_OPTION);
        if (x == 0){
            System.exit(0);
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void jdcDateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDateMouseClicked
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)tbDoctor.getModel();
        dtm.setRowCount(0);
        txtDID.setText("");
    }//GEN-LAST:event_jdcDateMouseClicked

    private void jdcDateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jdcDateMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_jdcDateMouseEntered

    private void jdcDateInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_jdcDateInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_jdcDateInputMethodTextChanged

    private void jdcDateKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jdcDateKeyPressed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)tbDoctor.getModel();
        dtm.setRowCount(0);
        txtDID.setText("");
    }//GEN-LAST:event_jdcDateKeyPressed

    private void cbxStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxStartActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)tbDoctor.getModel();
        dtm.setRowCount(0);
        txtDID.setText("");
    }//GEN-LAST:event_cbxStartActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        // TODO add your handling code here:
        //GET SELECTED INFORMATION FROM APPOINTMENT INFORMATION
        Date date_temp = jdcDate.getDate();
        SimpleDateFormat sdf = new SimpleDateFormat("EEEE");
        String date = sdf.format(date_temp);
        String tstart = (String)cbxStart.getSelectedItem();
        String tend = (String)cbxEnd.getSelectedItem();
        int start = Integer.parseInt(tstart.substring(0, 2));
        int end = Integer.parseInt(tend.substring(0, 2));
        //START TIME MUST BE LESS THAN END TIME
        if(start < end){
            // APPOINTMENT DAY MUST NOT BE NULL
            if(date == null)
                JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not choose free day, please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
            else{
                txtDID.setText("");
                txtDname.setText("");
                DefaultTableModel dtm = (DefaultTableModel)tbDoctor.getModel();
                dtm.setRowCount(0);
                ArrayList<FreeSchedule> list = FunctionFreeSchedule.GetIDDoctorOnTime(date, start, end);
                Iterator<FreeSchedule> itr = list.iterator();
                while (itr.hasNext()) {
                    FreeSchedule freeObj = itr.next();
                    Doctor doctor = FunctionDoctor.SearchForID(freeObj.getDid());
                    dtm.addRow(new Object[]{doctor.getId(),doctor.getName()});
                }
            }  
        }else{
            JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">The finish time must be greater than start time!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void cbxEndActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxEndActionPerformed
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)tbDoctor.getModel();
        dtm.setRowCount(0);
        txtDID.setText("");
    }//GEN-LAST:event_cbxEndActionPerformed

    private void tbShowListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbShowListMouseClicked

        //GET APPOINTMENT ID FROM SELECTED ROW
        int index = tbShowList.getSelectedRow();
        TableModel model = tbShowList.getModel();
        String appointment_id = model.getValueAt(index, 0).toString();
        //SET APPOINTMENT ID TO TEXTFIELD
        txtAppointID.setText(appointment_id);
        //SEARCH DOCTOR WITH DOCTOR ID
        Appointment appoint = FunctionAppointment.SearchForID(Integer.parseInt(appointment_id));
        //CONVERT INT TO TIME TYPE
        int start = appoint.getStart();
        int end = appoint.getEnd();
        String tstart, tend;
        if(start < 10){
            tstart = new String("0"+start+":00");
        }else{
            tstart = new String(start+":00");
        }
        if(end < 10){
            tend = new String("0"+end+":00");
        }else{
            tend = new String(end+":00");
        }
        //RENEW START AND END COMBOBOX
        cbxStart.removeAllItems();
        cbxStart.addItem(tstart);
        cbxEnd.removeAllItems();
        cbxEnd.addItem(tend);
        String[] listStart = {"07:00","08:00","09:00","10:00","11:00","13:00","14:00","15:00","16:00"};
        String[] listEnd = {"08:00","09:00","10:00","11:00","12:00","14:00","15:00","16:00","17:00"};
        for(int i =0; i<=8;i++){
            if(!listStart[i].equals(tstart))
                cbxStart.addItem(listStart[i]);
            if(!listEnd[i].equals(tend))
                cbxEnd.addItem(listEnd[i]);
        }
        //SET DATE
        jdcDate.setDate(appoint.getDate_appoint());
        //RENEW DOCTOR ID COMBOBOX
        String temp_did = model.getValueAt(index, 1).toString();
        txtDID.setText(temp_did);
        Doctor doctort = FunctionDoctor.SearchForID(Integer.parseInt(temp_did));
        txtDname.setText(doctort.getName());
        //SEARCH FREE SCHEDULE LIST WITH DAY_FREE MATCH TO USER'S INPUT CONDITION (DATE, START TIME, END TIME)
        DefaultTableModel dtm = (DefaultTableModel)tbDoctor.getModel();
        dtm.setRowCount(0);
        
        SimpleDateFormat sdf = new SimpleDateFormat("EEEE");
        String date = sdf.format(appoint.getDate_appoint());
        
        ArrayList<FreeSchedule> list = FunctionFreeSchedule.GetIDDoctorOnTime(date, appoint.getStart(), appoint.getEnd());
        Iterator<FreeSchedule> itr = list.iterator();
        while (itr.hasNext()) {
            FreeSchedule freeObj = itr.next();
            Doctor doctor = FunctionDoctor.SearchForID(freeObj.getDid());
            dtm.addRow(new Object[]{doctor.getId(),doctor.getName()});
        }
        //SET SYMPTOM, BACKGROUND DISEASE AND DIAGNOSE
        txtSymptom.setText(appoint.getSymptom());
        txtBackDisea.setText(appoint.getBackground_disease());
        txtDiagnose.setText(appoint.getDiagnose());
        if(!txtDiagnose.getText().equals("")){
            txtSymptom.setEditable(false);
            txtBackDisea.setEditable(false);
            txtDiagnose.setEditable(false);
            jdcDate.setEnabled(false);
            cbxStart.setEditable(false);
            cbxEnd.setEditable(false);
            btnAdd.setEnabled(false);
            btnUpdate.setEnabled(false);
            btnDelete.setEnabled(false);
            cbxStart.setEnabled(false);
            cbxEnd.setEnabled(false);
            btnSearch.setEnabled(false);
            tbDoctor.setEnabled(false);
            tbDoctor.setVisible(false);
        }else{
            txtSymptom.setEditable(true);
            txtBackDisea.setEditable(true);
            txtDiagnose.setEditable(false);
            jdcDate.setEnabled(true);
            cbxStart.setEditable(true);
            cbxEnd.setEditable(true);
            btnAdd.setEnabled(false);
            btnUpdate.setEnabled(true);
            btnDelete.setEnabled(true);
            btnSearch.setEnabled(true);
            tbDoctor.setEnabled(true);
            tbDoctor.setVisible(true);
        }
    }//GEN-LAST:event_tbShowListMouseClicked

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        Appointment appoint = new Appointment();
        appoint.setPatient_id(patient_id);
        if(!txtDID.getText().equals(""))
            appoint.setDoctor_id(Integer.parseInt((String) txtDID.getText()));        appoint.setSymptom(txtSymptom.getText());
        appoint.setBackground_disease(txtBackDisea.getText());
        appoint.setDiagnose(txtDiagnose.getText());
        appoint.setDate_appoint(jdcDate.getDate());
        //CONVERT STRING FROM COMBOBOX TO INT
        String tstart = (String)cbxStart.getSelectedItem();
        String tend = (String)cbxEnd.getSelectedItem();
        int start = Integer.parseInt(tstart.substring(0, 2));
        int end = Integer.parseInt(tend.substring(0, 2));
        //APPOINTMENT ID MUST BE NULL
        if(!txtAppointID.getText().equals("")){
            JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You are choosing an existed Appointment, please click Clear button!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
        }else{
            if(start < end){
                if(jdcDate.getDate()== null)
                    JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not choose day, please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                else {
                    if(txtDID.getText().equals(""))
                        JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not choose Doctor please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                    else{
                        if(txtSymptom.getText().equals(""))
                            JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not input Symptoms please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                        else{
                            if(txtBackDisea.getText().equals(""))
                                JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not input Background diseases please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                            else{
                                appoint.setStart(start);
                                appoint.setEnd(end);
                                FunctionAppointment.Add(appoint);
                                setVisible(false);
                                new PatientAppointment(patient_id).setVisible(true);
                            }
                        }
                    }
                }  
            }else{
                JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">The End time must be greater than start time!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
            }           
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        Appointment appoint = new Appointment();
        int appointment_id = Integer.parseInt(txtAppointID.getText());
        appoint.setId(appointment_id);
        appoint.setPatient_id(patient_id);
        if(!txtDID.getText().equals(""))
            appoint.setDoctor_id(Integer.parseInt((String) txtDID.getText()));        appoint.setSymptom(txtSymptom.getText());
        appoint.setSymptom(txtSymptom.getText());
        appoint.setBackground_disease(txtBackDisea.getText());
        appoint.setDiagnose(txtDiagnose.getText());
        appoint.setDate_appoint(jdcDate.getDate());

        String tstart = (String)cbxStart.getSelectedItem();
        String tend = (String)cbxEnd.getSelectedItem();
        int start = Integer.parseInt(tstart.substring(0, 2));
        int end = Integer.parseInt(tend.substring(0, 2));

        if(txtAppointID.getText().equals("")){
            JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not choose free schedule from the available list, please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);

        }else{
            if(start < end){
                if(jdcDate.getDate()== null)
                    JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not choose day, please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                else {
                    if(txtDID.getText().equals(""))
                        JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not choose Doctor please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                    else{
                        if(txtSymptom.getText().equals(""))
                            JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not input Symptoms please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                        else{
                            if(txtBackDisea.getText().equals(""))
                                JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not input Background diseases please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
                            else{
                                appoint.setStart(start);
                                appoint.setEnd(end);
                                FunctionAppointment.Update(appoint);
                                setVisible(false);
                                new PatientAppointment(patient_id).setVisible(true);
                            }
                        }  
                    }
                }   
            }else{
                JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">The finish time must be greater than start time!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        if(txtAppointID.getText().equals(""))
            JOptionPane.showMessageDialog (null,"<html><b style=\"color:red\">You did not choose free schedule from the available list, please do it again!</b></html>", "Message", JOptionPane.ERROR_MESSAGE);
        else{
            FunctionAppointment.Delete(Integer.parseInt(txtAppointID.getText()));
            setVisible(false);
            new PatientAppointment(patient_id).setVisible(true);
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new PatientAppointment(patient_id).setVisible(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void txtAppointIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAppointIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppointIDActionPerformed

    private void txtAppointIDKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAppointIDKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAppointIDKeyReleased

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        // TODO add your handling code here:
        DefaultTableModel dtm = (DefaultTableModel)tbShowList.getModel();
        
        ArrayList<Appointment> list = FunctionPatient.GetAllAppointment(patient_id);
        Iterator<Appointment> itr = list.iterator();
        
        while (itr.hasNext()) {
            Appointment appointObj = itr.next();
            if(appointObj.getDiagnose().equals(""))
                dtm.addRow(new Object[]{appointObj.getId(), appointObj.getDoctor_id(), appointObj.getDate_appoint(), "NO", appointObj.getStatus()});
            else
                dtm.addRow(new Object[]{appointObj.getId(), appointObj.getDoctor_id(), appointObj.getDate_appoint(), "YES", appointObj.getStatus()});
            
        }
    }//GEN-LAST:event_formComponentShown

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new Login().setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    private void btnBillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBillActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new PatientBill(patient_id).setVisible(true);
    }//GEN-LAST:event_btnBillActionPerformed

    private void btnInforActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInforActionPerformed
        // TODO add your handling code here:
        setVisible(false);
        new PatientInformation(patient_id).setVisible(true);
    }//GEN-LAST:event_btnInforActionPerformed

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jLabel4MouseClicked

    private void tbDoctorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbDoctorMouseClicked
        // TODO add your handling code here:
        int index = tbDoctor.getSelectedRow();
        TableModel model = tbDoctor.getModel();
        String did = model.getValueAt(index, 0).toString();
        txtDID.setText(did);
        Doctor doctor = FunctionDoctor.SearchForID(Integer.parseInt(did));
        txtDname.setText(doctor.getName());
    }//GEN-LAST:event_tbDoctorMouseClicked

    private void txtDnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDnameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PatientAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PatientAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PatientAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PatientAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PatientAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBill;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnInfor;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cbxEnd;
    private javax.swing.JComboBox<String> cbxStart;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private com.toedter.calendar.JDateChooser jdcDate;
    private javax.swing.JTable tbDoctor;
    private javax.swing.JTable tbShowList;
    private javax.swing.JTextField txtAppointID;
    private javax.swing.JTextArea txtBackDisea;
    private javax.swing.JTextField txtDID;
    private javax.swing.JTextArea txtDiagnose;
    private javax.swing.JTextField txtDname;
    private javax.swing.JTextArea txtSymptom;
    // End of variables declaration//GEN-END:variables
}
